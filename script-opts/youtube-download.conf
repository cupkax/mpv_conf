###### 键绑定 ######
#download_video_binding=ctrl+d
#download_audio_binding=ctrl+a
#download_subtitle_binding=ctrl+s
#download_video_embed_subtitle_binding=ctrl+i
#select_range_binding=ctrl+r
#download_mpv_playlist=ctrl+p
###### 键绑定 ######

# 指定音频格式： "best", "aac","flac", "mp3", "m4a", "opus", "vorbis", or "wav"。默认 mp3
audio_format=aac

# 指定 ffmpeg/avconv 音频质量
#为 VBR 或特定比特率（如 128K）插入一个介于 0（更好）和 9（更差）之间的值。默认 0
#audio_quality=0

# 在音频文件上嵌入缩略图，默认禁用
embed_thumbnail=yes

# 为音频文件添加元数据，默认禁用
audio_add_metadata=yes

# 为视频文件添加元数据，默认禁用
video_add_metadata=yes

# 与 youtube-dl --format FORMAT 相同
# 参考 https://github.com/ytdl-org/youtube-dl/blob/master/README.md#format-selection
# 设置为 current" 以下载当前正在播放的相同质量（默认值）
#video_format=best

# 如有必要，将视频重新复用到另一个容器中：（目前支持：
# avi, flv, gif, mkv, mov, mp4, webm, aac, aiff, alac, flac, m4a, mka, mp3,
# ogg, opus, vorbis, wav)
#remux_video=mkv

# 如有必要，将视频编码为其他格式（当前支持：mp4|flv|ogg|webm|mkv|avi）
#recode_video="mp4"

# 将文件名限制为仅 ASCII 字符，并避免文件名中的“&”和空格。默认 yes
#restrict_filenames=no

#下载整个播放列表（no）或仅下载一个视频（yes）。默认 yes
# Same as youtube-dl --no-playlist
#no_playlist=no

#下载整个 mpv 播放列表（yes）或仅下载当前视频（no）。默认 no
# 这是默认设置，可以用 download_mpv_playlist 键绑定覆盖
#mpv_playlist=no

# 使用存档文件，请参阅 youtube-dl --download-archive
# 你有这些选择：
# * 注释掉以不使用存档文件
# * 设置绝对路径以对所有下载使用一个存档，例如 download_archive="/home/user/archive.txt"
# * 设置相对路径/仅文件名以在每个目录上使用一个存档，例如 download_archive="archive.txt"
# * 使用$PLAYLIST 为每个播放列表创建一个存档，例如 download_archive="/home/user/archives/$PLAYLIST.txt"
#download_archive="$PLAYLIST.txt"

# 指定文件下载路径
## 使用'/:dir%mpvconf%'或'~~/'以指定 portable_config 目录，或者使用'/:dir%script%'指定脚本所在目录
## 或者使用'/:var'指定环境变量，比如'/:var%APPDATA%'或'/:var%HOME%'，也可以直接使用绝对路径
download_path=~~/files/ytdl/download
# 文件名格式
filename=%(title)s.%(ext)s

# 字幕语言
# 与 youtube-dl --sub-lang en 相同
# 设置为"all"以下载/嵌入所有语言
#sub_lang=en

# 字幕格式
# 与 youtube-dl --sub-format best 相同
#sub_format=最佳

# 下载自动生成的字幕
# 与 youtube-dl --write-auto-subs / --no-write-auto-subs 相同
#sub_auto_generated=yes


# 使用 Cookie 文件进行 youtube-dl
# 与 youtube-dl --cookies 相同
#cookies=C:\Users\username\cookies.txt

# 将下载错误写入日志文件
#log_file=C:\Users\username\download.log

# youtube-dl 的可执行文件，例如“youtube-dl”、“yt-dlp”或可执行文件的路径
# 将其注释掉以自动检测$PATH 中的可执行文件（默认行为）
youtube_dl_exe=yt-dlp

# 使用相应配置文件，请参阅 youtube-dl --config-location，而不是此配置快捷键相关的常用选项
#download_video_config_file=C:\Users\username\video_config.txt
#download_audio_config_file=C:\Users\username\audio_config.txt
#download_subtitle_config_file=C:\Users\username\subtitle_config.txt
#download_video_embed_subtitle_config_file=C:\Users\username\embeded_config.txt

# 打开一个新的 "Windows Terminal" 窗口/标签页进行下载
# 这允许监控下载进度
# 目前仅适用于 Windows 和新的 wt.exe 终端
open_new_terminal=no
#open_new_terminal_timeout=

# 设置打开新终端的命令（JSON 数组）
# 使用"$cwd"作为工作目录的占位符
# 使用"$cmd"作为下载命令的占位符
# 打开选项卡 `--tab` 的 xfce4-terminal 示例
# 下载完成后保持选项卡打开`-H`
# open_new_terminal_command=["xfce4-terminal", "--tab", "-H", "-x", "$cmd"]
# 在新窗口中打开选项卡 `-new-tab` 的 Windows 终端示例
# 下载完成后调用 `ytdlp` 并保持选项卡打开 `/K`。
# 将 `/K` 替换为 `/C` 以在下载完成后关闭选项卡。
#open_new_terminal_command=["wt", "-w", "ytdlp", "new-tab", "-d", "$cwd", "cmd", "/K", "$cmd"]

# 用于本地化 uosc 脚本子菜单的显示内容，默认为空
locale_content=[{"Download": "下载","Audio": "音频","Subtitles": "字幕","Select range": "选择范围","Video (Current quality)": "视频（当前质量）","Video (Default quality)": "视频（默认质量）","Video with subtitles": "视频和字幕","Current file is not a youtube video": "当前文件不受支持","Video (Config file)": "视频（使用配置文件）","Audio (Config file)": "音频（使用配置文件）","Subtitle (Config file)": "字幕（使用配置文件）","Video with subtitles (Config file)": "视频和字幕（使用配置文件）","Download whole mpv playlist": "下载整个播放列表"}]